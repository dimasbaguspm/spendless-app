/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ProtectedImport } from './routes/_protected'
import { Route as AuthImport } from './routes/_auth'
import { Route as ProtectedIndexImport } from './routes/_protected/index'
import { Route as ProtectedTransactionsImport } from './routes/_protected/transactions'
import { Route as ProtectedAnalyticsImport } from './routes/_protected/analytics'
import { Route as ProtectedAddImport } from './routes/_protected/add'
import { Route as AuthRegisterImport } from './routes/_auth/register'
import { Route as AuthLoginImport } from './routes/_auth/login'
import { Route as ProtectedSettingsIndexImport } from './routes/_protected/settings/index'
import { Route as ProtectedSettingsSecurityImport } from './routes/_protected/settings/security'
import { Route as ProtectedSettingsProfileImport } from './routes/_protected/settings/profile'
import { Route as ProtectedSettingsPreferencesImport } from './routes/_protected/settings/preferences'
import { Route as ProtectedSettingsNotificationsImport } from './routes/_protected/settings/notifications'
import { Route as ProtectedSettingsLegalImport } from './routes/_protected/settings/legal'
import { Route as ProtectedSettingsHelpImport } from './routes/_protected/settings/help'
import { Route as ProtectedSettingsDataExportImport } from './routes/_protected/settings/data-export'
import { Route as ProtectedSettingsCategoriesImport } from './routes/_protected/settings/categories'
import { Route as ProtectedSettingsAccountsImport } from './routes/_protected/settings/accounts'

// Create/Update Routes

const ProtectedRoute = ProtectedImport.update({
  id: '/_protected',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const ProtectedIndexRoute = ProtectedIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedTransactionsRoute = ProtectedTransactionsImport.update({
  id: '/transactions',
  path: '/transactions',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedAnalyticsRoute = ProtectedAnalyticsImport.update({
  id: '/analytics',
  path: '/analytics',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedAddRoute = ProtectedAddImport.update({
  id: '/add',
  path: '/add',
  getParentRoute: () => ProtectedRoute,
} as any)

const AuthRegisterRoute = AuthRegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => AuthRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRoute,
} as any)

const ProtectedSettingsIndexRoute = ProtectedSettingsIndexImport.update({
  id: '/settings/',
  path: '/settings/',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedSettingsSecurityRoute = ProtectedSettingsSecurityImport.update({
  id: '/settings/security',
  path: '/settings/security',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedSettingsProfileRoute = ProtectedSettingsProfileImport.update({
  id: '/settings/profile',
  path: '/settings/profile',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedSettingsPreferencesRoute =
  ProtectedSettingsPreferencesImport.update({
    id: '/settings/preferences',
    path: '/settings/preferences',
    getParentRoute: () => ProtectedRoute,
  } as any)

const ProtectedSettingsNotificationsRoute =
  ProtectedSettingsNotificationsImport.update({
    id: '/settings/notifications',
    path: '/settings/notifications',
    getParentRoute: () => ProtectedRoute,
  } as any)

const ProtectedSettingsLegalRoute = ProtectedSettingsLegalImport.update({
  id: '/settings/legal',
  path: '/settings/legal',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedSettingsHelpRoute = ProtectedSettingsHelpImport.update({
  id: '/settings/help',
  path: '/settings/help',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedSettingsDataExportRoute =
  ProtectedSettingsDataExportImport.update({
    id: '/settings/data-export',
    path: '/settings/data-export',
    getParentRoute: () => ProtectedRoute,
  } as any)

const ProtectedSettingsCategoriesRoute =
  ProtectedSettingsCategoriesImport.update({
    id: '/settings/categories',
    path: '/settings/categories',
    getParentRoute: () => ProtectedRoute,
  } as any)

const ProtectedSettingsAccountsRoute = ProtectedSettingsAccountsImport.update({
  id: '/settings/accounts',
  path: '/settings/accounts',
  getParentRoute: () => ProtectedRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_protected': {
      id: '/_protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedImport
      parentRoute: typeof rootRoute
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof AuthImport
    }
    '/_auth/register': {
      id: '/_auth/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof AuthRegisterImport
      parentRoute: typeof AuthImport
    }
    '/_protected/add': {
      id: '/_protected/add'
      path: '/add'
      fullPath: '/add'
      preLoaderRoute: typeof ProtectedAddImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/analytics': {
      id: '/_protected/analytics'
      path: '/analytics'
      fullPath: '/analytics'
      preLoaderRoute: typeof ProtectedAnalyticsImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/transactions': {
      id: '/_protected/transactions'
      path: '/transactions'
      fullPath: '/transactions'
      preLoaderRoute: typeof ProtectedTransactionsImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/': {
      id: '/_protected/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof ProtectedIndexImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/settings/accounts': {
      id: '/_protected/settings/accounts'
      path: '/settings/accounts'
      fullPath: '/settings/accounts'
      preLoaderRoute: typeof ProtectedSettingsAccountsImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/settings/categories': {
      id: '/_protected/settings/categories'
      path: '/settings/categories'
      fullPath: '/settings/categories'
      preLoaderRoute: typeof ProtectedSettingsCategoriesImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/settings/data-export': {
      id: '/_protected/settings/data-export'
      path: '/settings/data-export'
      fullPath: '/settings/data-export'
      preLoaderRoute: typeof ProtectedSettingsDataExportImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/settings/help': {
      id: '/_protected/settings/help'
      path: '/settings/help'
      fullPath: '/settings/help'
      preLoaderRoute: typeof ProtectedSettingsHelpImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/settings/legal': {
      id: '/_protected/settings/legal'
      path: '/settings/legal'
      fullPath: '/settings/legal'
      preLoaderRoute: typeof ProtectedSettingsLegalImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/settings/notifications': {
      id: '/_protected/settings/notifications'
      path: '/settings/notifications'
      fullPath: '/settings/notifications'
      preLoaderRoute: typeof ProtectedSettingsNotificationsImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/settings/preferences': {
      id: '/_protected/settings/preferences'
      path: '/settings/preferences'
      fullPath: '/settings/preferences'
      preLoaderRoute: typeof ProtectedSettingsPreferencesImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/settings/profile': {
      id: '/_protected/settings/profile'
      path: '/settings/profile'
      fullPath: '/settings/profile'
      preLoaderRoute: typeof ProtectedSettingsProfileImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/settings/security': {
      id: '/_protected/settings/security'
      path: '/settings/security'
      fullPath: '/settings/security'
      preLoaderRoute: typeof ProtectedSettingsSecurityImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/settings/': {
      id: '/_protected/settings/'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof ProtectedSettingsIndexImport
      parentRoute: typeof ProtectedImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthLoginRoute: AuthLoginRoute,
  AuthRegisterRoute: AuthRegisterRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface ProtectedRouteChildren {
  ProtectedAddRoute: typeof ProtectedAddRoute
  ProtectedAnalyticsRoute: typeof ProtectedAnalyticsRoute
  ProtectedTransactionsRoute: typeof ProtectedTransactionsRoute
  ProtectedIndexRoute: typeof ProtectedIndexRoute
  ProtectedSettingsAccountsRoute: typeof ProtectedSettingsAccountsRoute
  ProtectedSettingsCategoriesRoute: typeof ProtectedSettingsCategoriesRoute
  ProtectedSettingsDataExportRoute: typeof ProtectedSettingsDataExportRoute
  ProtectedSettingsHelpRoute: typeof ProtectedSettingsHelpRoute
  ProtectedSettingsLegalRoute: typeof ProtectedSettingsLegalRoute
  ProtectedSettingsNotificationsRoute: typeof ProtectedSettingsNotificationsRoute
  ProtectedSettingsPreferencesRoute: typeof ProtectedSettingsPreferencesRoute
  ProtectedSettingsProfileRoute: typeof ProtectedSettingsProfileRoute
  ProtectedSettingsSecurityRoute: typeof ProtectedSettingsSecurityRoute
  ProtectedSettingsIndexRoute: typeof ProtectedSettingsIndexRoute
}

const ProtectedRouteChildren: ProtectedRouteChildren = {
  ProtectedAddRoute: ProtectedAddRoute,
  ProtectedAnalyticsRoute: ProtectedAnalyticsRoute,
  ProtectedTransactionsRoute: ProtectedTransactionsRoute,
  ProtectedIndexRoute: ProtectedIndexRoute,
  ProtectedSettingsAccountsRoute: ProtectedSettingsAccountsRoute,
  ProtectedSettingsCategoriesRoute: ProtectedSettingsCategoriesRoute,
  ProtectedSettingsDataExportRoute: ProtectedSettingsDataExportRoute,
  ProtectedSettingsHelpRoute: ProtectedSettingsHelpRoute,
  ProtectedSettingsLegalRoute: ProtectedSettingsLegalRoute,
  ProtectedSettingsNotificationsRoute: ProtectedSettingsNotificationsRoute,
  ProtectedSettingsPreferencesRoute: ProtectedSettingsPreferencesRoute,
  ProtectedSettingsProfileRoute: ProtectedSettingsProfileRoute,
  ProtectedSettingsSecurityRoute: ProtectedSettingsSecurityRoute,
  ProtectedSettingsIndexRoute: ProtectedSettingsIndexRoute,
}

const ProtectedRouteWithChildren = ProtectedRoute._addFileChildren(
  ProtectedRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof ProtectedRouteWithChildren
  '/login': typeof AuthLoginRoute
  '/register': typeof AuthRegisterRoute
  '/add': typeof ProtectedAddRoute
  '/analytics': typeof ProtectedAnalyticsRoute
  '/transactions': typeof ProtectedTransactionsRoute
  '/': typeof ProtectedIndexRoute
  '/settings/accounts': typeof ProtectedSettingsAccountsRoute
  '/settings/categories': typeof ProtectedSettingsCategoriesRoute
  '/settings/data-export': typeof ProtectedSettingsDataExportRoute
  '/settings/help': typeof ProtectedSettingsHelpRoute
  '/settings/legal': typeof ProtectedSettingsLegalRoute
  '/settings/notifications': typeof ProtectedSettingsNotificationsRoute
  '/settings/preferences': typeof ProtectedSettingsPreferencesRoute
  '/settings/profile': typeof ProtectedSettingsProfileRoute
  '/settings/security': typeof ProtectedSettingsSecurityRoute
  '/settings': typeof ProtectedSettingsIndexRoute
}

export interface FileRoutesByTo {
  '': typeof AuthRouteWithChildren
  '/login': typeof AuthLoginRoute
  '/register': typeof AuthRegisterRoute
  '/add': typeof ProtectedAddRoute
  '/analytics': typeof ProtectedAnalyticsRoute
  '/transactions': typeof ProtectedTransactionsRoute
  '/': typeof ProtectedIndexRoute
  '/settings/accounts': typeof ProtectedSettingsAccountsRoute
  '/settings/categories': typeof ProtectedSettingsCategoriesRoute
  '/settings/data-export': typeof ProtectedSettingsDataExportRoute
  '/settings/help': typeof ProtectedSettingsHelpRoute
  '/settings/legal': typeof ProtectedSettingsLegalRoute
  '/settings/notifications': typeof ProtectedSettingsNotificationsRoute
  '/settings/preferences': typeof ProtectedSettingsPreferencesRoute
  '/settings/profile': typeof ProtectedSettingsProfileRoute
  '/settings/security': typeof ProtectedSettingsSecurityRoute
  '/settings': typeof ProtectedSettingsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_auth': typeof AuthRouteWithChildren
  '/_protected': typeof ProtectedRouteWithChildren
  '/_auth/login': typeof AuthLoginRoute
  '/_auth/register': typeof AuthRegisterRoute
  '/_protected/add': typeof ProtectedAddRoute
  '/_protected/analytics': typeof ProtectedAnalyticsRoute
  '/_protected/transactions': typeof ProtectedTransactionsRoute
  '/_protected/': typeof ProtectedIndexRoute
  '/_protected/settings/accounts': typeof ProtectedSettingsAccountsRoute
  '/_protected/settings/categories': typeof ProtectedSettingsCategoriesRoute
  '/_protected/settings/data-export': typeof ProtectedSettingsDataExportRoute
  '/_protected/settings/help': typeof ProtectedSettingsHelpRoute
  '/_protected/settings/legal': typeof ProtectedSettingsLegalRoute
  '/_protected/settings/notifications': typeof ProtectedSettingsNotificationsRoute
  '/_protected/settings/preferences': typeof ProtectedSettingsPreferencesRoute
  '/_protected/settings/profile': typeof ProtectedSettingsProfileRoute
  '/_protected/settings/security': typeof ProtectedSettingsSecurityRoute
  '/_protected/settings/': typeof ProtectedSettingsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/login'
    | '/register'
    | '/add'
    | '/analytics'
    | '/transactions'
    | '/'
    | '/settings/accounts'
    | '/settings/categories'
    | '/settings/data-export'
    | '/settings/help'
    | '/settings/legal'
    | '/settings/notifications'
    | '/settings/preferences'
    | '/settings/profile'
    | '/settings/security'
    | '/settings'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/login'
    | '/register'
    | '/add'
    | '/analytics'
    | '/transactions'
    | '/'
    | '/settings/accounts'
    | '/settings/categories'
    | '/settings/data-export'
    | '/settings/help'
    | '/settings/legal'
    | '/settings/notifications'
    | '/settings/preferences'
    | '/settings/profile'
    | '/settings/security'
    | '/settings'
  id:
    | '__root__'
    | '/_auth'
    | '/_protected'
    | '/_auth/login'
    | '/_auth/register'
    | '/_protected/add'
    | '/_protected/analytics'
    | '/_protected/transactions'
    | '/_protected/'
    | '/_protected/settings/accounts'
    | '/_protected/settings/categories'
    | '/_protected/settings/data-export'
    | '/_protected/settings/help'
    | '/_protected/settings/legal'
    | '/_protected/settings/notifications'
    | '/_protected/settings/preferences'
    | '/_protected/settings/profile'
    | '/_protected/settings/security'
    | '/_protected/settings/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  ProtectedRoute: typeof ProtectedRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  ProtectedRoute: ProtectedRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/_protected"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/login",
        "/_auth/register"
      ]
    },
    "/_protected": {
      "filePath": "_protected.tsx",
      "children": [
        "/_protected/add",
        "/_protected/analytics",
        "/_protected/transactions",
        "/_protected/",
        "/_protected/settings/accounts",
        "/_protected/settings/categories",
        "/_protected/settings/data-export",
        "/_protected/settings/help",
        "/_protected/settings/legal",
        "/_protected/settings/notifications",
        "/_protected/settings/preferences",
        "/_protected/settings/profile",
        "/_protected/settings/security",
        "/_protected/settings/"
      ]
    },
    "/_auth/login": {
      "filePath": "_auth/login.tsx",
      "parent": "/_auth"
    },
    "/_auth/register": {
      "filePath": "_auth/register.tsx",
      "parent": "/_auth"
    },
    "/_protected/add": {
      "filePath": "_protected/add.tsx",
      "parent": "/_protected"
    },
    "/_protected/analytics": {
      "filePath": "_protected/analytics.tsx",
      "parent": "/_protected"
    },
    "/_protected/transactions": {
      "filePath": "_protected/transactions.tsx",
      "parent": "/_protected"
    },
    "/_protected/": {
      "filePath": "_protected/index.tsx",
      "parent": "/_protected"
    },
    "/_protected/settings/accounts": {
      "filePath": "_protected/settings/accounts.tsx",
      "parent": "/_protected"
    },
    "/_protected/settings/categories": {
      "filePath": "_protected/settings/categories.tsx",
      "parent": "/_protected"
    },
    "/_protected/settings/data-export": {
      "filePath": "_protected/settings/data-export.tsx",
      "parent": "/_protected"
    },
    "/_protected/settings/help": {
      "filePath": "_protected/settings/help.tsx",
      "parent": "/_protected"
    },
    "/_protected/settings/legal": {
      "filePath": "_protected/settings/legal.tsx",
      "parent": "/_protected"
    },
    "/_protected/settings/notifications": {
      "filePath": "_protected/settings/notifications.tsx",
      "parent": "/_protected"
    },
    "/_protected/settings/preferences": {
      "filePath": "_protected/settings/preferences.tsx",
      "parent": "/_protected"
    },
    "/_protected/settings/profile": {
      "filePath": "_protected/settings/profile.tsx",
      "parent": "/_protected"
    },
    "/_protected/settings/security": {
      "filePath": "_protected/settings/security.tsx",
      "parent": "/_protected"
    },
    "/_protected/settings/": {
      "filePath": "_protected/settings/index.tsx",
      "parent": "/_protected"
    }
  }
}
ROUTE_MANIFEST_END */
